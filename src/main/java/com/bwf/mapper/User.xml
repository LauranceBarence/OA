<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 对应 dao 中的 接口 -->
<mapper namespace="com.bwf.dao.UserMapper">

	<resultMap type="com.bwf.entity.User" id="simpleUser">
		<id column = "user_id" property = "userId"/>
		<result column = "username" property = "username"/>
		<result column = "password" property = "password"/>
		<result column = "nickname" property = "nickname"/>
		<association property="leader"
				javaType="com.bwf.entity.User"
				column="leader_id"
				select="getUserById">
		</association>
		
	</resultMap>
	
	<resultMap type="com.bwf.entity.User" id="nbUser">
		<id column = "user_id" property = "userId"/>
		<result column = "username" property = "username"/>
		<result column = "password" property = "password"/>
		<result column = "nickname" property = "nickname"/>
		<result column = "avater" property = "avater"/>
		<collection property="menus" ofType = "com.bwf.entity.Menu" resultMap = "com.bwf.dao.MenuMapper.menu">
			
		</collection>
		<collection property="operates" ofType = "com.bwf.entity.Operate" resultMap = "com.bwf.dao.OperateMapper.operate">
			
		</collection>
	</resultMap>
  

    <select id="getUserById" parameterType="int" resultMap="simpleUser">
        select * from `user` where user_id = #{id}
    </select>
    
    <select id="getUserByUsernameAndPassword" 
    	parameterType="com.bwf.entity.User" 
    	resultMap = "simpleUser">
    	select * from `user` where username = #{username} and password = #{password}
   	</select>
   	
   	<select id="getMenusAndOperatesByUserId" parameterType="int" resultMap = "nbUser">
   		select user.*, menu.*, operate.* from user
		inner join rel_user_role on user.user_id = rel_user_role.user_id
		inner join role on rel_user_role.role_id = role.role_id
		inner join rel_role_permission on role.role_id = rel_role_permission.role_id
		inner join permission on rel_role_permission.permission_id = permission.permission_id
		left outer join rel_permission_menu on permission.permission_id = rel_permission_menu.permission_id
		left outer join menu on rel_permission_menu.menu_id = menu.menu_id
		left outer join rel_permission_operate on permission.permission_id = rel_permission_operate.permission_id
		left outer join operate on rel_permission_operate.operate_id = operate.operate_id
		where user.user_id = #{userId}
   	
   	</select>
   	
   	<select id="getAllUsers" resultMap = "simpleUser">
   		select * from `user` where status=1
   	</select>
   	
   	<select id="getAllUserCount" resultType = "int">
   		select count(*) from `user`
   	</select>
   	
   	<select id="getAllUsersByPage" parameterType="int" resultMap = "simpleUser">
   		select * from `user`  where status = 1 limit #{p}, #{pageSize}
   	</select>
    
    <!-- 增加一个 user -->
    <insert id="add" parameterType="com.bwf.entity.User" useGeneratedKeys="true" keyProperty="userId">
    	insert into `user` values ( null , #{username} , #{password} , #{nickname} , #{leader.userId} ,1)
    </insert>
    
    <!-- 删除 一个 user -->
    <!--  <delete id="delete" parameterType="int">
    	delete from user where user_id = #{id}
    </delete>-->
    
    <update id="delete" parameterType="int">
    	update `user` set status = 2 where user_id = #{id}
    </update>
    <!-- 删除多个user -->
    <!-- 
    <select id="deleteMulti">
    	delete from `user` where user_id in
    	<foreach collection="idArr" open="(" close=")" separator="," item="id">
    		#{id}
    	</foreach>
    </select> -->
    <update id="deleteMulti">
    	update `user` set status = 2 where user_id in
    	<foreach collection="idArr" open="(" close=")" separator="," item="id">
    		#{id}
    	</foreach>
    </update>
    
    <update id="update" parameterType="com.bwf.entity.User">
    	update `user` set 
    		username = #{username} , 
    		password = #{password} , 
    		nickname = #{nickname} ,
    		leader_id = #{leaderId}
    	where user_id = #{userId}
    </update>
    
    <update id="updateWithPassword" parameterType="com.bwf.entity.User">
    	update `user` set     		
    		password = '456' , 
    		nickname = #{nickname} ,
    		leader_id = #{leader.userId} 
    	where user_id = #{userId}
    </update>
    
    <update id="updateWithoutPassword" parameterType="com.bwf.entity.User">
    	update `user` set     	
    		nickname = #{nickname} ,
    	    leader_id = #{leader.userId} 
    	where user_id = #{userId}
    </update>
    
   
</mapper>